name: Publish Docker image

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    tags:
      - "v*.*.*"
    branches:
      - "develop"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
      packages: "write"

    environment: production

    env:
      PROJECT_ID: portfolio-336617
      REPOSITORY_NAME: docker-registry
      IMAGE_NAME: laravel-api
      REGISTRY: northamerica-northeast1-docker.pkg.dev
      SERVICE_ACCOUNT: github-ci-cd@portfolio-336617.iam.gserviceaccount.com
      WORKLOAD_IDENTITY_PROVIDER: projects/323608933583/locations/global/workloadIdentityPools/gb-github-actions-ci-cd-pool/providers/gb-github-actions-ci-cd-provider

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v2.1.2"
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT }}
          project_id: ${{ env.PROJECT_ID }}

      - name: "Set up gcloud CLI"
        uses: google-github-actions/setup-gcloud@v2.1.0
        with:
          version: "latest"

      - name: "Configure docker client"
        run: gcloud auth configure-docker ${{ env.REGISTRY }}

      - name: "Build Docker image"
        run: docker build -f Dockerfile -t ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.IMAGE_NAME }}:latest .

      - name: "Push Docker image to GCR"
        run: |
          docker tag ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.IMAGE_NAME }}:latest ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
          docker push ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
